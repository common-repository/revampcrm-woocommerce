<?php
/**
 * ContactEditViewModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  RevampCRM\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * RevampCRM Developer API
 *
 * You can use this API to access Account related info and contacts. We currently support Basic Authentication. Using 'Username' and either 'Password' Or 'API Key' as the password
 *
 * OpenAPI spec version: v1
 * Contact: crm@revampco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace RevampCRM\Models;

use \ArrayAccess;

/**
 * ContactEditViewModel Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     RevampCRM\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ContactEditViewModel implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ContactEditViewModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'profile_pic_id' => 'string',
        'birthdate_modfied' => 'string',
        'group_memberships' => '\RevampCRM\Models\GroupMembership[]',
        'custom_field1' => 'string',
        'custom_field2' => 'string',
        'custom_field3' => 'string',
        'custom_field4' => 'string',
        'custom_field5' => 'string',
        'custom_field6' => 'string',
        'custom_field7' => 'string',
        'custom_field8' => 'string',
        'custom_field9' => 'string',
        'custom_field10' => 'string',
        'profile_pic_url' => 'string',
        'placeholder_color' => 'string',
        'is_customer' => 'bool',
        'last_cart_date' => '\DateTime',
        'contact_source' => 'string',
        '_id' => 'string',
        'name' => 'string',
        'title' => 'string',
        'organization' => 'string',
        'contact_info_secondary_phone_number' => 'string',
        'contact_info_secondary_email' => 'string',
        'contact_info_primary_phone_number' => 'string',
        'contact_info_primary_email' => 'string',
        'contact_infoskype' => 'string',
        'contact_info_facebook' => 'string',
        'contact_info_website' => 'string',
        'contact_info_twitter' => 'string',
        'contact_info_address_line1' => 'string',
        'contact_info_address_line2' => 'string',
        'contact_info_address_city' => 'string',
        'contact_info_address_postal_code' => 'string',
        'contact_info_address_country' => 'string',
        'contact_info_address_state' => 'string',
        'created_on_utc' => '\DateTime',
        'birth_date' => '\DateTime',
        'update_on_utc' => '\DateTime',
        'country_name' => 'string',
        'external_providers' => '\RevampCRM\Models\ExternalProvider[]',
        'image_path' => 'string',
        'description' => 'string',
        'profile_pic_attachment' => '\RevampCRM\Models\HttpPostedFileBase',
        'is_deleted' => 'bool',
        'contact_info_linked_in' => 'string',
        'gender' => 'string',
        'tags' => 'string',
        'add_another' => 'bool',
        'score' => 'int',
        'user_name' => 'string',
        'assigned_user_id' => 'string',
        'assigned_user_name' => 'string',
        'contact_stage' => 'string',
        'subscribed' => 'string',
        'email_value' => 'string'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'profile_pic_id' => 'ProfilePicId',
        'birthdate_modfied' => 'birthdateModfied',
        'group_memberships' => 'GroupMemberships',
        'custom_field1' => 'CustomField1',
        'custom_field2' => 'CustomField2',
        'custom_field3' => 'CustomField3',
        'custom_field4' => 'CustomField4',
        'custom_field5' => 'CustomField5',
        'custom_field6' => 'CustomField6',
        'custom_field7' => 'CustomField7',
        'custom_field8' => 'CustomField8',
        'custom_field9' => 'CustomField9',
        'custom_field10' => 'CustomField10',
        'profile_pic_url' => 'ProfilePicUrl',
        'placeholder_color' => 'PlaceholderColor',
        'is_customer' => 'IsCustomer',
        'last_cart_date' => 'LastCartDate',
        'contact_source' => 'ContactSource',
        '_id' => '_id',
        'name' => 'Name',
        'title' => 'Title',
        'organization' => 'Organization',
        'contact_info_secondary_phone_number' => 'ContactInfoSecondaryPhoneNumber',
        'contact_info_secondary_email' => 'ContactInfoSecondaryEmail',
        'contact_info_primary_phone_number' => 'ContactInfoPrimaryPhoneNumber',
        'contact_info_primary_email' => 'ContactInfoPrimaryEmail',
        'contact_infoskype' => 'ContactInfoskype',
        'contact_info_facebook' => 'ContactInfoFacebook',
        'contact_info_website' => 'ContactInfoWebsite',
        'contact_info_twitter' => 'ContactInfoTwitter',
        'contact_info_address_line1' => 'ContactInfoAddressLine1',
        'contact_info_address_line2' => 'ContactInfoAddressLine2',
        'contact_info_address_city' => 'ContactInfoAddressCity',
        'contact_info_address_postal_code' => 'ContactInfoAddressPostalCode',
        'contact_info_address_country' => 'ContactInfoAddressCountry',
        'contact_info_address_state' => 'ContactInfoAddressState',
        'created_on_utc' => 'CreatedOnUtc',
        'birth_date' => 'BirthDate',
        'update_on_utc' => 'UpdateOnUtc',
        'country_name' => 'CountryName',
        'external_providers' => 'ExternalProviders',
        'image_path' => 'ImagePath',
        'description' => 'Description',
        'profile_pic_attachment' => 'ProfilePicAttachment',
        'is_deleted' => 'IsDeleted',
        'contact_info_linked_in' => 'ContactInfoLinkedIn',
        'gender' => 'Gender',
        'tags' => 'Tags',
        'add_another' => 'AddAnother',
        'score' => 'Score',
        'user_name' => 'UserName',
        'assigned_user_id' => 'AssignedUserId',
        'assigned_user_name' => 'AssignedUserName',
        'contact_stage' => 'ContactStage',
        'subscribed' => 'Subscribed',
        'email_value' => 'EmailValue'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'profile_pic_id' => 'setProfilePicId',
        'birthdate_modfied' => 'setBirthdateModfied',
        'group_memberships' => 'setGroupMemberships',
        'custom_field1' => 'setCustomField1',
        'custom_field2' => 'setCustomField2',
        'custom_field3' => 'setCustomField3',
        'custom_field4' => 'setCustomField4',
        'custom_field5' => 'setCustomField5',
        'custom_field6' => 'setCustomField6',
        'custom_field7' => 'setCustomField7',
        'custom_field8' => 'setCustomField8',
        'custom_field9' => 'setCustomField9',
        'custom_field10' => 'setCustomField10',
        'profile_pic_url' => 'setProfilePicUrl',
        'placeholder_color' => 'setPlaceholderColor',
        'is_customer' => 'setIsCustomer',
        'last_cart_date' => 'setLastCartDate',
        'contact_source' => 'setContactSource',
        '_id' => 'setId',
        'name' => 'setName',
        'title' => 'setTitle',
        'organization' => 'setOrganization',
        'contact_info_secondary_phone_number' => 'setContactInfoSecondaryPhoneNumber',
        'contact_info_secondary_email' => 'setContactInfoSecondaryEmail',
        'contact_info_primary_phone_number' => 'setContactInfoPrimaryPhoneNumber',
        'contact_info_primary_email' => 'setContactInfoPrimaryEmail',
        'contact_infoskype' => 'setContactInfoskype',
        'contact_info_facebook' => 'setContactInfoFacebook',
        'contact_info_website' => 'setContactInfoWebsite',
        'contact_info_twitter' => 'setContactInfoTwitter',
        'contact_info_address_line1' => 'setContactInfoAddressLine1',
        'contact_info_address_line2' => 'setContactInfoAddressLine2',
        'contact_info_address_city' => 'setContactInfoAddressCity',
        'contact_info_address_postal_code' => 'setContactInfoAddressPostalCode',
        'contact_info_address_country' => 'setContactInfoAddressCountry',
        'contact_info_address_state' => 'setContactInfoAddressState',
        'created_on_utc' => 'setCreatedOnUtc',
        'birth_date' => 'setBirthDate',
        'update_on_utc' => 'setUpdateOnUtc',
        'country_name' => 'setCountryName',
        'external_providers' => 'setExternalProviders',
        'image_path' => 'setImagePath',
        'description' => 'setDescription',
        'profile_pic_attachment' => 'setProfilePicAttachment',
        'is_deleted' => 'setIsDeleted',
        'contact_info_linked_in' => 'setContactInfoLinkedIn',
        'gender' => 'setGender',
        'tags' => 'setTags',
        'add_another' => 'setAddAnother',
        'score' => 'setScore',
        'user_name' => 'setUserName',
        'assigned_user_id' => 'setAssignedUserId',
        'assigned_user_name' => 'setAssignedUserName',
        'contact_stage' => 'setContactStage',
        'subscribed' => 'setSubscribed',
        'email_value' => 'setEmailValue'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'profile_pic_id' => 'getProfilePicId',
        'birthdate_modfied' => 'getBirthdateModfied',
        'group_memberships' => 'getGroupMemberships',
        'custom_field1' => 'getCustomField1',
        'custom_field2' => 'getCustomField2',
        'custom_field3' => 'getCustomField3',
        'custom_field4' => 'getCustomField4',
        'custom_field5' => 'getCustomField5',
        'custom_field6' => 'getCustomField6',
        'custom_field7' => 'getCustomField7',
        'custom_field8' => 'getCustomField8',
        'custom_field9' => 'getCustomField9',
        'custom_field10' => 'getCustomField10',
        'profile_pic_url' => 'getProfilePicUrl',
        'placeholder_color' => 'getPlaceholderColor',
        'is_customer' => 'getIsCustomer',
        'last_cart_date' => 'getLastCartDate',
        'contact_source' => 'getContactSource',
        '_id' => 'getId',
        'name' => 'getName',
        'title' => 'getTitle',
        'organization' => 'getOrganization',
        'contact_info_secondary_phone_number' => 'getContactInfoSecondaryPhoneNumber',
        'contact_info_secondary_email' => 'getContactInfoSecondaryEmail',
        'contact_info_primary_phone_number' => 'getContactInfoPrimaryPhoneNumber',
        'contact_info_primary_email' => 'getContactInfoPrimaryEmail',
        'contact_infoskype' => 'getContactInfoskype',
        'contact_info_facebook' => 'getContactInfoFacebook',
        'contact_info_website' => 'getContactInfoWebsite',
        'contact_info_twitter' => 'getContactInfoTwitter',
        'contact_info_address_line1' => 'getContactInfoAddressLine1',
        'contact_info_address_line2' => 'getContactInfoAddressLine2',
        'contact_info_address_city' => 'getContactInfoAddressCity',
        'contact_info_address_postal_code' => 'getContactInfoAddressPostalCode',
        'contact_info_address_country' => 'getContactInfoAddressCountry',
        'contact_info_address_state' => 'getContactInfoAddressState',
        'created_on_utc' => 'getCreatedOnUtc',
        'birth_date' => 'getBirthDate',
        'update_on_utc' => 'getUpdateOnUtc',
        'country_name' => 'getCountryName',
        'external_providers' => 'getExternalProviders',
        'image_path' => 'getImagePath',
        'description' => 'getDescription',
        'profile_pic_attachment' => 'getProfilePicAttachment',
        'is_deleted' => 'getIsDeleted',
        'contact_info_linked_in' => 'getContactInfoLinkedIn',
        'gender' => 'getGender',
        'tags' => 'getTags',
        'add_another' => 'getAddAnother',
        'score' => 'getScore',
        'user_name' => 'getUserName',
        'assigned_user_id' => 'getAssignedUserId',
        'assigned_user_name' => 'getAssignedUserName',
        'contact_stage' => 'getContactStage',
        'subscribed' => 'getSubscribed',
        'email_value' => 'getEmailValue'
    );

    public static function getters()
    {
        return self::$getters;
    }

    const SUBSCRIBED_UNSUBSCRIBED = 'UNSUBSCRIBED';
    const SUBSCRIBED_MARKETING_OFF = 'MARKETING_OFF';
    const SUBSCRIBED_MARKETING_ON = 'MARKETING_ON';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getSubscribedAllowableValues()
    {
        return [
            self::SUBSCRIBED_UNSUBSCRIBED,
            self::SUBSCRIBED_MARKETING_OFF,
            self::SUBSCRIBED_MARKETING_ON,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['profile_pic_id'] = isset($data['profile_pic_id']) ? $data['profile_pic_id'] : null;
        $this->container['birthdate_modfied'] = isset($data['birthdate_modfied']) ? $data['birthdate_modfied'] : null;
        $this->container['group_memberships'] = isset($data['group_memberships']) ? $data['group_memberships'] : null;
        $this->container['custom_field1'] = isset($data['custom_field1']) ? $data['custom_field1'] : null;
        $this->container['custom_field2'] = isset($data['custom_field2']) ? $data['custom_field2'] : null;
        $this->container['custom_field3'] = isset($data['custom_field3']) ? $data['custom_field3'] : null;
        $this->container['custom_field4'] = isset($data['custom_field4']) ? $data['custom_field4'] : null;
        $this->container['custom_field5'] = isset($data['custom_field5']) ? $data['custom_field5'] : null;
        $this->container['custom_field6'] = isset($data['custom_field6']) ? $data['custom_field6'] : null;
        $this->container['custom_field7'] = isset($data['custom_field7']) ? $data['custom_field7'] : null;
        $this->container['custom_field8'] = isset($data['custom_field8']) ? $data['custom_field8'] : null;
        $this->container['custom_field9'] = isset($data['custom_field9']) ? $data['custom_field9'] : null;
        $this->container['custom_field10'] = isset($data['custom_field10']) ? $data['custom_field10'] : null;
        $this->container['profile_pic_url'] = isset($data['profile_pic_url']) ? $data['profile_pic_url'] : null;
        $this->container['placeholder_color'] = isset($data['placeholder_color']) ? $data['placeholder_color'] : null;
        $this->container['is_customer'] = isset($data['is_customer']) ? $data['is_customer'] : null;
        $this->container['last_cart_date'] = isset($data['last_cart_date']) ? $data['last_cart_date'] : null;
        $this->container['contact_source'] = isset($data['contact_source']) ? $data['contact_source'] : null;
        $this->container['_id'] = isset($data['_id']) ? $data['_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['contact_info_secondary_phone_number'] = isset($data['contact_info_secondary_phone_number']) ? $data['contact_info_secondary_phone_number'] : null;
        $this->container['contact_info_secondary_email'] = isset($data['contact_info_secondary_email']) ? $data['contact_info_secondary_email'] : null;
        $this->container['contact_info_primary_phone_number'] = isset($data['contact_info_primary_phone_number']) ? $data['contact_info_primary_phone_number'] : null;
        $this->container['contact_info_primary_email'] = isset($data['contact_info_primary_email']) ? $data['contact_info_primary_email'] : null;
        $this->container['contact_infoskype'] = isset($data['contact_infoskype']) ? $data['contact_infoskype'] : null;
        $this->container['contact_info_facebook'] = isset($data['contact_info_facebook']) ? $data['contact_info_facebook'] : null;
        $this->container['contact_info_website'] = isset($data['contact_info_website']) ? $data['contact_info_website'] : null;
        $this->container['contact_info_twitter'] = isset($data['contact_info_twitter']) ? $data['contact_info_twitter'] : null;
        $this->container['contact_info_address_line1'] = isset($data['contact_info_address_line1']) ? $data['contact_info_address_line1'] : null;
        $this->container['contact_info_address_line2'] = isset($data['contact_info_address_line2']) ? $data['contact_info_address_line2'] : null;
        $this->container['contact_info_address_city'] = isset($data['contact_info_address_city']) ? $data['contact_info_address_city'] : null;
        $this->container['contact_info_address_postal_code'] = isset($data['contact_info_address_postal_code']) ? $data['contact_info_address_postal_code'] : null;
        $this->container['contact_info_address_country'] = isset($data['contact_info_address_country']) ? $data['contact_info_address_country'] : null;
        $this->container['contact_info_address_state'] = isset($data['contact_info_address_state']) ? $data['contact_info_address_state'] : null;
        $this->container['created_on_utc'] = isset($data['created_on_utc']) ? $data['created_on_utc'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['update_on_utc'] = isset($data['update_on_utc']) ? $data['update_on_utc'] : null;
        $this->container['country_name'] = isset($data['country_name']) ? $data['country_name'] : null;
        $this->container['external_providers'] = isset($data['external_providers']) ? $data['external_providers'] : null;
        $this->container['image_path'] = isset($data['image_path']) ? $data['image_path'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['profile_pic_attachment'] = isset($data['profile_pic_attachment']) ? $data['profile_pic_attachment'] : null;
        $this->container['is_deleted'] = isset($data['is_deleted']) ? $data['is_deleted'] : null;
        $this->container['contact_info_linked_in'] = isset($data['contact_info_linked_in']) ? $data['contact_info_linked_in'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['add_another'] = isset($data['add_another']) ? $data['add_another'] : null;
        $this->container['score'] = isset($data['score']) ? $data['score'] : null;
        $this->container['user_name'] = isset($data['user_name']) ? $data['user_name'] : null;
        $this->container['assigned_user_id'] = isset($data['assigned_user_id']) ? $data['assigned_user_id'] : null;
        $this->container['assigned_user_name'] = isset($data['assigned_user_name']) ? $data['assigned_user_name'] : null;
        $this->container['contact_stage'] = isset($data['contact_stage']) ? $data['contact_stage'] : null;
        $this->container['subscribed'] = isset($data['subscribed']) ? $data['subscribed'] : null;
        $this->container['email_value'] = isset($data['email_value']) ? $data['email_value'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        if ($this->container['name'] === null) {
            $invalid_properties[] = "'name' can't be null";
        }
        $allowed_values = array("UNSUBSCRIBED", "MARKETING_OFF", "MARKETING_ON");
        if (!in_array($this->container['subscribed'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'subscribed', must be one of #{allowed_values}.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['name'] === null) {
            return false;
        }
        $allowed_values = array("UNSUBSCRIBED", "MARKETING_OFF", "MARKETING_ON");
        if (!in_array($this->container['subscribed'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets profile_pic_id
     * @return string
     */
    public function getProfilePicId()
    {
        return $this->container['profile_pic_id'];
    }

    /**
     * Sets profile_pic_id
     * @param string $profile_pic_id
     * @return $this
     */
    public function setProfilePicId($profile_pic_id)
    {
        $this->container['profile_pic_id'] = $profile_pic_id;

        return $this;
    }

    /**
     * Gets birthdate_modfied
     * @return string
     */
    public function getBirthdateModfied()
    {
        return $this->container['birthdate_modfied'];
    }

    /**
     * Sets birthdate_modfied
     * @param string $birthdate_modfied
     * @return $this
     */
    public function setBirthdateModfied($birthdate_modfied)
    {
        $this->container['birthdate_modfied'] = $birthdate_modfied;

        return $this;
    }

    /**
     * Gets group_memberships
     * @return \RevampCRM\Models\GroupMembership[]
     */
    public function getGroupMemberships()
    {
        return $this->container['group_memberships'];
    }

    /**
     * Sets group_memberships
     * @param \RevampCRM\Models\GroupMembership[] $group_memberships
     * @return $this
     */
    public function setGroupMemberships($group_memberships)
    {
        $this->container['group_memberships'] = $group_memberships;

        return $this;
    }

    /**
     * Gets custom_field1
     * @return string
     */
    public function getCustomField1()
    {
        return $this->container['custom_field1'];
    }

    /**
     * Sets custom_field1
     * @param string $custom_field1
     * @return $this
     */
    public function setCustomField1($custom_field1)
    {
        $this->container['custom_field1'] = $custom_field1;

        return $this;
    }

    /**
     * Gets custom_field2
     * @return string
     */
    public function getCustomField2()
    {
        return $this->container['custom_field2'];
    }

    /**
     * Sets custom_field2
     * @param string $custom_field2
     * @return $this
     */
    public function setCustomField2($custom_field2)
    {
        $this->container['custom_field2'] = $custom_field2;

        return $this;
    }

    /**
     * Gets custom_field3
     * @return string
     */
    public function getCustomField3()
    {
        return $this->container['custom_field3'];
    }

    /**
     * Sets custom_field3
     * @param string $custom_field3
     * @return $this
     */
    public function setCustomField3($custom_field3)
    {
        $this->container['custom_field3'] = $custom_field3;

        return $this;
    }

    /**
     * Gets custom_field4
     * @return string
     */
    public function getCustomField4()
    {
        return $this->container['custom_field4'];
    }

    /**
     * Sets custom_field4
     * @param string $custom_field4
     * @return $this
     */
    public function setCustomField4($custom_field4)
    {
        $this->container['custom_field4'] = $custom_field4;

        return $this;
    }

    /**
     * Gets custom_field5
     * @return string
     */
    public function getCustomField5()
    {
        return $this->container['custom_field5'];
    }

    /**
     * Sets custom_field5
     * @param string $custom_field5
     * @return $this
     */
    public function setCustomField5($custom_field5)
    {
        $this->container['custom_field5'] = $custom_field5;

        return $this;
    }

    /**
     * Gets custom_field6
     * @return string
     */
    public function getCustomField6()
    {
        return $this->container['custom_field6'];
    }

    /**
     * Sets custom_field6
     * @param string $custom_field6
     * @return $this
     */
    public function setCustomField6($custom_field6)
    {
        $this->container['custom_field6'] = $custom_field6;

        return $this;
    }

    /**
     * Gets custom_field7
     * @return string
     */
    public function getCustomField7()
    {
        return $this->container['custom_field7'];
    }

    /**
     * Sets custom_field7
     * @param string $custom_field7
     * @return $this
     */
    public function setCustomField7($custom_field7)
    {
        $this->container['custom_field7'] = $custom_field7;

        return $this;
    }

    /**
     * Gets custom_field8
     * @return string
     */
    public function getCustomField8()
    {
        return $this->container['custom_field8'];
    }

    /**
     * Sets custom_field8
     * @param string $custom_field8
     * @return $this
     */
    public function setCustomField8($custom_field8)
    {
        $this->container['custom_field8'] = $custom_field8;

        return $this;
    }

    /**
     * Gets custom_field9
     * @return string
     */
    public function getCustomField9()
    {
        return $this->container['custom_field9'];
    }

    /**
     * Sets custom_field9
     * @param string $custom_field9
     * @return $this
     */
    public function setCustomField9($custom_field9)
    {
        $this->container['custom_field9'] = $custom_field9;

        return $this;
    }

    /**
     * Gets custom_field10
     * @return string
     */
    public function getCustomField10()
    {
        return $this->container['custom_field10'];
    }

    /**
     * Sets custom_field10
     * @param string $custom_field10
     * @return $this
     */
    public function setCustomField10($custom_field10)
    {
        $this->container['custom_field10'] = $custom_field10;

        return $this;
    }

    /**
     * Gets profile_pic_url
     * @return string
     */
    public function getProfilePicUrl()
    {
        return $this->container['profile_pic_url'];
    }

    /**
     * Sets profile_pic_url
     * @param string $profile_pic_url
     * @return $this
     */
    public function setProfilePicUrl($profile_pic_url)
    {
        $this->container['profile_pic_url'] = $profile_pic_url;

        return $this;
    }

    /**
     * Gets placeholder_color
     * @return string
     */
    public function getPlaceholderColor()
    {
        return $this->container['placeholder_color'];
    }

    /**
     * Sets placeholder_color
     * @param string $placeholder_color
     * @return $this
     */
    public function setPlaceholderColor($placeholder_color)
    {
        $this->container['placeholder_color'] = $placeholder_color;

        return $this;
    }

    /**
     * Gets is_customer
     * @return bool
     */
    public function getIsCustomer()
    {
        return $this->container['is_customer'];
    }

    /**
     * Sets is_customer
     * @param bool $is_customer
     * @return $this
     */
    public function setIsCustomer($is_customer)
    {
        $this->container['is_customer'] = $is_customer;

        return $this;
    }

    /**
     * Gets last_cart_date
     * @return \DateTime
     */
    public function getLastCartDate()
    {
        return $this->container['last_cart_date'];
    }

    /**
     * Sets last_cart_date
     * @param \DateTime $last_cart_date
     * @return $this
     */
    public function setLastCartDate($last_cart_date)
    {
        $this->container['last_cart_date'] = $last_cart_date;

        return $this;
    }

    /**
     * Gets contact_source
     * @return string
     */
    public function getContactSource()
    {
        return $this->container['contact_source'];
    }

    /**
     * Sets contact_source
     * @param string $contact_source
     * @return $this
     */
    public function setContactSource($contact_source)
    {
        $this->container['contact_source'] = $contact_source;

        return $this;
    }

    /**
     * Gets _id
     * @return string
     */
    public function getId()
    {
        return $this->container['_id'];
    }

    /**
     * Sets _id
     * @param string $_id
     * @return $this
     */
    public function setId($_id)
    {
        $this->container['_id'] = $_id;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     * @param string $title
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets organization
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     * @param string $organization
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets contact_info_secondary_phone_number
     * @return string
     */
    public function getContactInfoSecondaryPhoneNumber()
    {
        return $this->container['contact_info_secondary_phone_number'];
    }

    /**
     * Sets contact_info_secondary_phone_number
     * @param string $contact_info_secondary_phone_number
     * @return $this
     */
    public function setContactInfoSecondaryPhoneNumber($contact_info_secondary_phone_number)
    {
        $this->container['contact_info_secondary_phone_number'] = $contact_info_secondary_phone_number;

        return $this;
    }

    /**
     * Gets contact_info_secondary_email
     * @return string
     */
    public function getContactInfoSecondaryEmail()
    {
        return $this->container['contact_info_secondary_email'];
    }

    /**
     * Sets contact_info_secondary_email
     * @param string $contact_info_secondary_email
     * @return $this
     */
    public function setContactInfoSecondaryEmail($contact_info_secondary_email)
    {
        $this->container['contact_info_secondary_email'] = $contact_info_secondary_email;

        return $this;
    }

    /**
     * Gets contact_info_primary_phone_number
     * @return string
     */
    public function getContactInfoPrimaryPhoneNumber()
    {
        return $this->container['contact_info_primary_phone_number'];
    }

    /**
     * Sets contact_info_primary_phone_number
     * @param string $contact_info_primary_phone_number
     * @return $this
     */
    public function setContactInfoPrimaryPhoneNumber($contact_info_primary_phone_number)
    {
        $this->container['contact_info_primary_phone_number'] = $contact_info_primary_phone_number;

        return $this;
    }

    /**
     * Gets contact_info_primary_email
     * @return string
     */
    public function getContactInfoPrimaryEmail()
    {
        return $this->container['contact_info_primary_email'];
    }

    /**
     * Sets contact_info_primary_email
     * @param string $contact_info_primary_email
     * @return $this
     */
    public function setContactInfoPrimaryEmail($contact_info_primary_email)
    {
        $this->container['contact_info_primary_email'] = $contact_info_primary_email;

        return $this;
    }

    /**
     * Gets contact_infoskype
     * @return string
     */
    public function getContactInfoskype()
    {
        return $this->container['contact_infoskype'];
    }

    /**
     * Sets contact_infoskype
     * @param string $contact_infoskype
     * @return $this
     */
    public function setContactInfoskype($contact_infoskype)
    {
        $this->container['contact_infoskype'] = $contact_infoskype;

        return $this;
    }

    /**
     * Gets contact_info_facebook
     * @return string
     */
    public function getContactInfoFacebook()
    {
        return $this->container['contact_info_facebook'];
    }

    /**
     * Sets contact_info_facebook
     * @param string $contact_info_facebook
     * @return $this
     */
    public function setContactInfoFacebook($contact_info_facebook)
    {
        $this->container['contact_info_facebook'] = $contact_info_facebook;

        return $this;
    }

    /**
     * Gets contact_info_website
     * @return string
     */
    public function getContactInfoWebsite()
    {
        return $this->container['contact_info_website'];
    }

    /**
     * Sets contact_info_website
     * @param string $contact_info_website
     * @return $this
     */
    public function setContactInfoWebsite($contact_info_website)
    {
        $this->container['contact_info_website'] = $contact_info_website;

        return $this;
    }

    /**
     * Gets contact_info_twitter
     * @return string
     */
    public function getContactInfoTwitter()
    {
        return $this->container['contact_info_twitter'];
    }

    /**
     * Sets contact_info_twitter
     * @param string $contact_info_twitter
     * @return $this
     */
    public function setContactInfoTwitter($contact_info_twitter)
    {
        $this->container['contact_info_twitter'] = $contact_info_twitter;

        return $this;
    }

    /**
     * Gets contact_info_address_line1
     * @return string
     */
    public function getContactInfoAddressLine1()
    {
        return $this->container['contact_info_address_line1'];
    }

    /**
     * Sets contact_info_address_line1
     * @param string $contact_info_address_line1
     * @return $this
     */
    public function setContactInfoAddressLine1($contact_info_address_line1)
    {
        $this->container['contact_info_address_line1'] = $contact_info_address_line1;

        return $this;
    }

    /**
     * Gets contact_info_address_line2
     * @return string
     */
    public function getContactInfoAddressLine2()
    {
        return $this->container['contact_info_address_line2'];
    }

    /**
     * Sets contact_info_address_line2
     * @param string $contact_info_address_line2
     * @return $this
     */
    public function setContactInfoAddressLine2($contact_info_address_line2)
    {
        $this->container['contact_info_address_line2'] = $contact_info_address_line2;

        return $this;
    }

    /**
     * Gets contact_info_address_city
     * @return string
     */
    public function getContactInfoAddressCity()
    {
        return $this->container['contact_info_address_city'];
    }

    /**
     * Sets contact_info_address_city
     * @param string $contact_info_address_city
     * @return $this
     */
    public function setContactInfoAddressCity($contact_info_address_city)
    {
        $this->container['contact_info_address_city'] = $contact_info_address_city;

        return $this;
    }

    /**
     * Gets contact_info_address_postal_code
     * @return string
     */
    public function getContactInfoAddressPostalCode()
    {
        return $this->container['contact_info_address_postal_code'];
    }

    /**
     * Sets contact_info_address_postal_code
     * @param string $contact_info_address_postal_code
     * @return $this
     */
    public function setContactInfoAddressPostalCode($contact_info_address_postal_code)
    {
        $this->container['contact_info_address_postal_code'] = $contact_info_address_postal_code;

        return $this;
    }

    /**
     * Gets contact_info_address_country
     * @return string
     */
    public function getContactInfoAddressCountry()
    {
        return $this->container['contact_info_address_country'];
    }

    /**
     * Sets contact_info_address_country
     * @param string $contact_info_address_country
     * @return $this
     */
    public function setContactInfoAddressCountry($contact_info_address_country)
    {
        $this->container['contact_info_address_country'] = $contact_info_address_country;

        return $this;
    }

    /**
     * Gets contact_info_address_state
     * @return string
     */
    public function getContactInfoAddressState()
    {
        return $this->container['contact_info_address_state'];
    }

    /**
     * Sets contact_info_address_state
     * @param string $contact_info_address_state
     * @return $this
     */
    public function setContactInfoAddressState($contact_info_address_state)
    {
        $this->container['contact_info_address_state'] = $contact_info_address_state;

        return $this;
    }

    /**
     * Gets created_on_utc
     * @return \DateTime
     */
    public function getCreatedOnUtc()
    {
        return $this->container['created_on_utc'];
    }

    /**
     * Sets created_on_utc
     * @param \DateTime $created_on_utc
     * @return $this
     */
    public function setCreatedOnUtc($created_on_utc)
    {
        $this->container['created_on_utc'] = $created_on_utc;

        return $this;
    }

    /**
     * Gets birth_date
     * @return \DateTime
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     * @param \DateTime $birth_date
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets update_on_utc
     * @return \DateTime
     */
    public function getUpdateOnUtc()
    {
        return $this->container['update_on_utc'];
    }

    /**
     * Sets update_on_utc
     * @param \DateTime $update_on_utc
     * @return $this
     */
    public function setUpdateOnUtc($update_on_utc)
    {
        $this->container['update_on_utc'] = $update_on_utc;

        return $this;
    }

    /**
     * Gets country_name
     * @return string
     */
    public function getCountryName()
    {
        return $this->container['country_name'];
    }

    /**
     * Sets country_name
     * @param string $country_name
     * @return $this
     */
    public function setCountryName($country_name)
    {
        $this->container['country_name'] = $country_name;

        return $this;
    }

    /**
     * Gets external_providers
     * @return \RevampCRM\Models\ExternalProvider[]
     */
    public function getExternalProviders()
    {
        return $this->container['external_providers'];
    }

    /**
     * Sets external_providers
     * @param \RevampCRM\Models\ExternalProvider[] $external_providers
     * @return $this
     */
    public function setExternalProviders($external_providers)
    {
        $this->container['external_providers'] = $external_providers;

        return $this;
    }

    /**
     * Gets image_path
     * @return string
     */
    public function getImagePath()
    {
        return $this->container['image_path'];
    }

    /**
     * Sets image_path
     * @param string $image_path
     * @return $this
     */
    public function setImagePath($image_path)
    {
        $this->container['image_path'] = $image_path;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets profile_pic_attachment
     * @return \RevampCRM\Models\HttpPostedFileBase
     */
    public function getProfilePicAttachment()
    {
        return $this->container['profile_pic_attachment'];
    }

    /**
     * Sets profile_pic_attachment
     * @param \RevampCRM\Models\HttpPostedFileBase $profile_pic_attachment
     * @return $this
     */
    public function setProfilePicAttachment($profile_pic_attachment)
    {
        $this->container['profile_pic_attachment'] = $profile_pic_attachment;

        return $this;
    }

    /**
     * Gets is_deleted
     * @return bool
     */
    public function getIsDeleted()
    {
        return $this->container['is_deleted'];
    }

    /**
     * Sets is_deleted
     * @param bool $is_deleted
     * @return $this
     */
    public function setIsDeleted($is_deleted)
    {
        $this->container['is_deleted'] = $is_deleted;

        return $this;
    }

    /**
     * Gets contact_info_linked_in
     * @return string
     */
    public function getContactInfoLinkedIn()
    {
        return $this->container['contact_info_linked_in'];
    }

    /**
     * Sets contact_info_linked_in
     * @param string $contact_info_linked_in
     * @return $this
     */
    public function setContactInfoLinkedIn($contact_info_linked_in)
    {
        $this->container['contact_info_linked_in'] = $contact_info_linked_in;

        return $this;
    }

    /**
     * Gets gender
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     * @param string $gender
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets tags
     * @return string
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     * @param string $tags
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets add_another
     * @return bool
     */
    public function getAddAnother()
    {
        return $this->container['add_another'];
    }

    /**
     * Sets add_another
     * @param bool $add_another
     * @return $this
     */
    public function setAddAnother($add_another)
    {
        $this->container['add_another'] = $add_another;

        return $this;
    }

    /**
     * Gets score
     * @return int
     */
    public function getScore()
    {
        return $this->container['score'];
    }

    /**
     * Sets score
     * @param int $score
     * @return $this
     */
    public function setScore($score)
    {
        $this->container['score'] = $score;

        return $this;
    }

    /**
     * Gets user_name
     * @return string
     */
    public function getUserName()
    {
        return $this->container['user_name'];
    }

    /**
     * Sets user_name
     * @param string $user_name
     * @return $this
     */
    public function setUserName($user_name)
    {
        $this->container['user_name'] = $user_name;

        return $this;
    }

    /**
     * Gets assigned_user_id
     * @return string
     */
    public function getAssignedUserId()
    {
        return $this->container['assigned_user_id'];
    }

    /**
     * Sets assigned_user_id
     * @param string $assigned_user_id
     * @return $this
     */
    public function setAssignedUserId($assigned_user_id)
    {
        $this->container['assigned_user_id'] = $assigned_user_id;

        return $this;
    }

    /**
     * Gets assigned_user_name
     * @return string
     */
    public function getAssignedUserName()
    {
        return $this->container['assigned_user_name'];
    }

    /**
     * Sets assigned_user_name
     * @param string $assigned_user_name
     * @return $this
     */
    public function setAssignedUserName($assigned_user_name)
    {
        $this->container['assigned_user_name'] = $assigned_user_name;

        return $this;
    }

    /**
     * Gets contact_stage
     * @return string
     */
    public function getContactStage()
    {
        return $this->container['contact_stage'];
    }

    /**
     * Sets contact_stage
     * @param string $contact_stage
     * @return $this
     */
    public function setContactStage($contact_stage)
    {
        $this->container['contact_stage'] = $contact_stage;

        return $this;
    }

    /**
     * Gets subscribed
     * @return string
     */
    public function getSubscribed()
    {
        return $this->container['subscribed'];
    }

    /**
     * Sets subscribed
     * @param string $subscribed
     * @return $this
     */
    public function setSubscribed($subscribed)
    {
        $allowed_values = array('UNSUBSCRIBED', 'MARKETING_OFF', 'MARKETING_ON');
        if (!in_array($subscribed, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'subscribed', must be one of 'UNSUBSCRIBED', 'MARKETING_OFF', 'MARKETING_ON'");
        }
        $this->container['subscribed'] = $subscribed;

        return $this;
    }

    /**
     * Gets email_value
     * @return string
     */
    public function getEmailValue()
    {
        return $this->container['email_value'];
    }

    /**
     * Sets email_value
     * @param string $email_value
     * @return $this
     */
    public function setEmailValue($email_value)
    {
        $this->container['email_value'] = $email_value;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\RevampCRM\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\RevampCRM\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


