<?php
/**
 * SearchParametersViewModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  RevampCRM\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * RevampCRM Developer API
 *
 * You can use this API to access Account related info and contacts. We currently support Basic Authentication. Using 'Username' and either 'Password' Or 'API Key' as the password
 *
 * OpenAPI spec version: v1
 * Contact: crm@revampco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace RevampCRM\Models;

use \ArrayAccess;

/**
 * SearchParametersViewModel Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     RevampCRM\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SearchParametersViewModel implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'SearchParametersViewModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'age_from' => 'string',
        'age_to' => 'string',
        'gender' => 'string',
        'country' => 'string',
        'city' => 'string',
        'postal_code' => 'string',
        'state' => 'string',
        'group_id' => 'string',
        'deal_stage' => 'string',
        'assign_user_id' => 'string',
        'assigned_to_name' => 'string',
        'score' => 'string',
        'tags' => 'string',
        'invoice_status' => 'string',
        'condition' => 'string',
        'ticket_status' => 'string',
        'has_task' => 'bool',
        'tasks_status' => 'string',
        'contacted_since' => 'int',
        'added_since' => 'int',
        'updated_since' => 'int',
        'is_search' => 'bool',
        'show_create_group' => 'bool',
        'search_by' => 'string',
        'editgroup' => 'bool',
        'keyword' => 'string',
        'e_commerce_query' => 'string',
        'page_size' => 'int',
        'page' => 'int',
        'format' => 'string',
        'sortby' => 'string',
        'sortdirection' => 'string',
        'is_edit' => 'bool',
        'has_deals' => 'bool',
        'custom_field1' => 'string',
        'custom_field2' => 'string',
        'custom_field3' => 'string',
        'is_saved_search' => 'bool',
        'custom_field4' => 'string',
        'custom_field5' => 'string',
        'custom_field6' => 'string',
        'custom_field7' => 'string',
        'custom_field8' => 'string',
        'custom_field9' => 'string',
        'custom_field10' => 'string',
        'saved_search_id' => 'string',
        'is_customer' => 'bool',
        'product' => 'string',
        'deal_status' => 'string',
        'has_email' => 'bool',
        'has_about' => 'bool',
        'has_invoice' => 'bool',
        'has_tickets' => 'bool',
        'added_from' => 'string',
        'added_to' => 'string',
        'contact_stage' => 'string',
        'contact_source' => 'string',
        'ecommerce_score' => 'int',
        'subscribed' => 'int'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'age_from' => 'AgeFrom',
        'age_to' => 'AgeTo',
        'gender' => 'Gender',
        'country' => 'Country',
        'city' => 'City',
        'postal_code' => 'PostalCode',
        'state' => 'State',
        'group_id' => 'GroupId',
        'deal_stage' => 'DealStage',
        'assign_user_id' => 'AssignUserId',
        'assigned_to_name' => 'AssignedToName',
        'score' => 'Score',
        'tags' => 'Tags',
        'invoice_status' => 'InvoiceStatus',
        'condition' => 'Condition',
        'ticket_status' => 'TicketStatus',
        'has_task' => 'HasTask',
        'tasks_status' => 'TasksStatus',
        'contacted_since' => 'ContactedSince',
        'added_since' => 'AddedSince',
        'updated_since' => 'UpdatedSince',
        'is_search' => 'IsSearch',
        'show_create_group' => 'ShowCreateGroup',
        'search_by' => 'searchBy',
        'editgroup' => 'editgroup',
        'keyword' => 'keyword',
        'e_commerce_query' => 'ECommerceQuery',
        'page_size' => 'pageSize',
        'page' => 'page',
        'format' => 'format',
        'sortby' => 'sortby',
        'sortdirection' => 'sortdirection',
        'is_edit' => 'isEdit',
        'has_deals' => 'HasDeals',
        'custom_field1' => 'CustomField1',
        'custom_field2' => 'CustomField2',
        'custom_field3' => 'CustomField3',
        'is_saved_search' => 'IsSavedSearch',
        'custom_field4' => 'CustomField4',
        'custom_field5' => 'CustomField5',
        'custom_field6' => 'CustomField6',
        'custom_field7' => 'CustomField7',
        'custom_field8' => 'CustomField8',
        'custom_field9' => 'CustomField9',
        'custom_field10' => 'CustomField10',
        'saved_search_id' => 'SavedSearchId',
        'is_customer' => 'IsCustomer',
        'product' => 'Product',
        'deal_status' => 'DealStatus',
        'has_email' => 'HasEmail',
        'has_about' => 'HasAbout',
        'has_invoice' => 'HasInvoice',
        'has_tickets' => 'HasTickets',
        'added_from' => 'AddedFrom',
        'added_to' => 'AddedTo',
        'contact_stage' => 'ContactStage',
        'contact_source' => 'ContactSource',
        'ecommerce_score' => 'EcommerceScore',
        'subscribed' => 'Subscribed'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'age_from' => 'setAgeFrom',
        'age_to' => 'setAgeTo',
        'gender' => 'setGender',
        'country' => 'setCountry',
        'city' => 'setCity',
        'postal_code' => 'setPostalCode',
        'state' => 'setState',
        'group_id' => 'setGroupId',
        'deal_stage' => 'setDealStage',
        'assign_user_id' => 'setAssignUserId',
        'assigned_to_name' => 'setAssignedToName',
        'score' => 'setScore',
        'tags' => 'setTags',
        'invoice_status' => 'setInvoiceStatus',
        'condition' => 'setCondition',
        'ticket_status' => 'setTicketStatus',
        'has_task' => 'setHasTask',
        'tasks_status' => 'setTasksStatus',
        'contacted_since' => 'setContactedSince',
        'added_since' => 'setAddedSince',
        'updated_since' => 'setUpdatedSince',
        'is_search' => 'setIsSearch',
        'show_create_group' => 'setShowCreateGroup',
        'search_by' => 'setSearchBy',
        'editgroup' => 'setEditgroup',
        'keyword' => 'setKeyword',
        'e_commerce_query' => 'setECommerceQuery',
        'page_size' => 'setPageSize',
        'page' => 'setPage',
        'format' => 'setFormat',
        'sortby' => 'setSortby',
        'sortdirection' => 'setSortdirection',
        'is_edit' => 'setIsEdit',
        'has_deals' => 'setHasDeals',
        'custom_field1' => 'setCustomField1',
        'custom_field2' => 'setCustomField2',
        'custom_field3' => 'setCustomField3',
        'is_saved_search' => 'setIsSavedSearch',
        'custom_field4' => 'setCustomField4',
        'custom_field5' => 'setCustomField5',
        'custom_field6' => 'setCustomField6',
        'custom_field7' => 'setCustomField7',
        'custom_field8' => 'setCustomField8',
        'custom_field9' => 'setCustomField9',
        'custom_field10' => 'setCustomField10',
        'saved_search_id' => 'setSavedSearchId',
        'is_customer' => 'setIsCustomer',
        'product' => 'setProduct',
        'deal_status' => 'setDealStatus',
        'has_email' => 'setHasEmail',
        'has_about' => 'setHasAbout',
        'has_invoice' => 'setHasInvoice',
        'has_tickets' => 'setHasTickets',
        'added_from' => 'setAddedFrom',
        'added_to' => 'setAddedTo',
        'contact_stage' => 'setContactStage',
        'contact_source' => 'setContactSource',
        'ecommerce_score' => 'setEcommerceScore',
        'subscribed' => 'setSubscribed'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'age_from' => 'getAgeFrom',
        'age_to' => 'getAgeTo',
        'gender' => 'getGender',
        'country' => 'getCountry',
        'city' => 'getCity',
        'postal_code' => 'getPostalCode',
        'state' => 'getState',
        'group_id' => 'getGroupId',
        'deal_stage' => 'getDealStage',
        'assign_user_id' => 'getAssignUserId',
        'assigned_to_name' => 'getAssignedToName',
        'score' => 'getScore',
        'tags' => 'getTags',
        'invoice_status' => 'getInvoiceStatus',
        'condition' => 'getCondition',
        'ticket_status' => 'getTicketStatus',
        'has_task' => 'getHasTask',
        'tasks_status' => 'getTasksStatus',
        'contacted_since' => 'getContactedSince',
        'added_since' => 'getAddedSince',
        'updated_since' => 'getUpdatedSince',
        'is_search' => 'getIsSearch',
        'show_create_group' => 'getShowCreateGroup',
        'search_by' => 'getSearchBy',
        'editgroup' => 'getEditgroup',
        'keyword' => 'getKeyword',
        'e_commerce_query' => 'getECommerceQuery',
        'page_size' => 'getPageSize',
        'page' => 'getPage',
        'format' => 'getFormat',
        'sortby' => 'getSortby',
        'sortdirection' => 'getSortdirection',
        'is_edit' => 'getIsEdit',
        'has_deals' => 'getHasDeals',
        'custom_field1' => 'getCustomField1',
        'custom_field2' => 'getCustomField2',
        'custom_field3' => 'getCustomField3',
        'is_saved_search' => 'getIsSavedSearch',
        'custom_field4' => 'getCustomField4',
        'custom_field5' => 'getCustomField5',
        'custom_field6' => 'getCustomField6',
        'custom_field7' => 'getCustomField7',
        'custom_field8' => 'getCustomField8',
        'custom_field9' => 'getCustomField9',
        'custom_field10' => 'getCustomField10',
        'saved_search_id' => 'getSavedSearchId',
        'is_customer' => 'getIsCustomer',
        'product' => 'getProduct',
        'deal_status' => 'getDealStatus',
        'has_email' => 'getHasEmail',
        'has_about' => 'getHasAbout',
        'has_invoice' => 'getHasInvoice',
        'has_tickets' => 'getHasTickets',
        'added_from' => 'getAddedFrom',
        'added_to' => 'getAddedTo',
        'contact_stage' => 'getContactStage',
        'contact_source' => 'getContactSource',
        'ecommerce_score' => 'getEcommerceScore',
        'subscribed' => 'getSubscribed'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['age_from'] = isset($data['age_from']) ? $data['age_from'] : null;
        $this->container['age_to'] = isset($data['age_to']) ? $data['age_to'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['group_id'] = isset($data['group_id']) ? $data['group_id'] : null;
        $this->container['deal_stage'] = isset($data['deal_stage']) ? $data['deal_stage'] : null;
        $this->container['assign_user_id'] = isset($data['assign_user_id']) ? $data['assign_user_id'] : null;
        $this->container['assigned_to_name'] = isset($data['assigned_to_name']) ? $data['assigned_to_name'] : null;
        $this->container['score'] = isset($data['score']) ? $data['score'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['invoice_status'] = isset($data['invoice_status']) ? $data['invoice_status'] : null;
        $this->container['condition'] = isset($data['condition']) ? $data['condition'] : null;
        $this->container['ticket_status'] = isset($data['ticket_status']) ? $data['ticket_status'] : null;
        $this->container['has_task'] = isset($data['has_task']) ? $data['has_task'] : null;
        $this->container['tasks_status'] = isset($data['tasks_status']) ? $data['tasks_status'] : null;
        $this->container['contacted_since'] = isset($data['contacted_since']) ? $data['contacted_since'] : null;
        $this->container['added_since'] = isset($data['added_since']) ? $data['added_since'] : null;
        $this->container['updated_since'] = isset($data['updated_since']) ? $data['updated_since'] : null;
        $this->container['is_search'] = isset($data['is_search']) ? $data['is_search'] : null;
        $this->container['show_create_group'] = isset($data['show_create_group']) ? $data['show_create_group'] : null;
        $this->container['search_by'] = isset($data['search_by']) ? $data['search_by'] : null;
        $this->container['editgroup'] = isset($data['editgroup']) ? $data['editgroup'] : null;
        $this->container['keyword'] = isset($data['keyword']) ? $data['keyword'] : null;
        $this->container['e_commerce_query'] = isset($data['e_commerce_query']) ? $data['e_commerce_query'] : null;
        $this->container['page_size'] = isset($data['page_size']) ? $data['page_size'] : null;
        $this->container['page'] = isset($data['page']) ? $data['page'] : null;
        $this->container['format'] = isset($data['format']) ? $data['format'] : null;
        $this->container['sortby'] = isset($data['sortby']) ? $data['sortby'] : null;
        $this->container['sortdirection'] = isset($data['sortdirection']) ? $data['sortdirection'] : null;
        $this->container['is_edit'] = isset($data['is_edit']) ? $data['is_edit'] : null;
        $this->container['has_deals'] = isset($data['has_deals']) ? $data['has_deals'] : null;
        $this->container['custom_field1'] = isset($data['custom_field1']) ? $data['custom_field1'] : null;
        $this->container['custom_field2'] = isset($data['custom_field2']) ? $data['custom_field2'] : null;
        $this->container['custom_field3'] = isset($data['custom_field3']) ? $data['custom_field3'] : null;
        $this->container['is_saved_search'] = isset($data['is_saved_search']) ? $data['is_saved_search'] : null;
        $this->container['custom_field4'] = isset($data['custom_field4']) ? $data['custom_field4'] : null;
        $this->container['custom_field5'] = isset($data['custom_field5']) ? $data['custom_field5'] : null;
        $this->container['custom_field6'] = isset($data['custom_field6']) ? $data['custom_field6'] : null;
        $this->container['custom_field7'] = isset($data['custom_field7']) ? $data['custom_field7'] : null;
        $this->container['custom_field8'] = isset($data['custom_field8']) ? $data['custom_field8'] : null;
        $this->container['custom_field9'] = isset($data['custom_field9']) ? $data['custom_field9'] : null;
        $this->container['custom_field10'] = isset($data['custom_field10']) ? $data['custom_field10'] : null;
        $this->container['saved_search_id'] = isset($data['saved_search_id']) ? $data['saved_search_id'] : null;
        $this->container['is_customer'] = isset($data['is_customer']) ? $data['is_customer'] : null;
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['deal_status'] = isset($data['deal_status']) ? $data['deal_status'] : null;
        $this->container['has_email'] = isset($data['has_email']) ? $data['has_email'] : null;
        $this->container['has_about'] = isset($data['has_about']) ? $data['has_about'] : null;
        $this->container['has_invoice'] = isset($data['has_invoice']) ? $data['has_invoice'] : null;
        $this->container['has_tickets'] = isset($data['has_tickets']) ? $data['has_tickets'] : null;
        $this->container['added_from'] = isset($data['added_from']) ? $data['added_from'] : null;
        $this->container['added_to'] = isset($data['added_to']) ? $data['added_to'] : null;
        $this->container['contact_stage'] = isset($data['contact_stage']) ? $data['contact_stage'] : null;
        $this->container['contact_source'] = isset($data['contact_source']) ? $data['contact_source'] : null;
        $this->container['ecommerce_score'] = isset($data['ecommerce_score']) ? $data['ecommerce_score'] : null;
        $this->container['subscribed'] = isset($data['subscribed']) ? $data['subscribed'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets age_from
     * @return string
     */
    public function getAgeFrom()
    {
        return $this->container['age_from'];
    }

    /**
     * Sets age_from
     * @param string $age_from
     * @return $this
     */
    public function setAgeFrom($age_from)
    {
        $this->container['age_from'] = $age_from;

        return $this;
    }

    /**
     * Gets age_to
     * @return string
     */
    public function getAgeTo()
    {
        return $this->container['age_to'];
    }

    /**
     * Sets age_to
     * @param string $age_to
     * @return $this
     */
    public function setAgeTo($age_to)
    {
        $this->container['age_to'] = $age_to;

        return $this;
    }

    /**
     * Gets gender
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     * @param string $gender
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets country
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     * @param string $country
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets postal_code
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     * @param string $postal_code
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets state
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     * @param string $state
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets group_id
     * @return string
     */
    public function getGroupId()
    {
        return $this->container['group_id'];
    }

    /**
     * Sets group_id
     * @param string $group_id
     * @return $this
     */
    public function setGroupId($group_id)
    {
        $this->container['group_id'] = $group_id;

        return $this;
    }

    /**
     * Gets deal_stage
     * @return string
     */
    public function getDealStage()
    {
        return $this->container['deal_stage'];
    }

    /**
     * Sets deal_stage
     * @param string $deal_stage
     * @return $this
     */
    public function setDealStage($deal_stage)
    {
        $this->container['deal_stage'] = $deal_stage;

        return $this;
    }

    /**
     * Gets assign_user_id
     * @return string
     */
    public function getAssignUserId()
    {
        return $this->container['assign_user_id'];
    }

    /**
     * Sets assign_user_id
     * @param string $assign_user_id
     * @return $this
     */
    public function setAssignUserId($assign_user_id)
    {
        $this->container['assign_user_id'] = $assign_user_id;

        return $this;
    }

    /**
     * Gets assigned_to_name
     * @return string
     */
    public function getAssignedToName()
    {
        return $this->container['assigned_to_name'];
    }

    /**
     * Sets assigned_to_name
     * @param string $assigned_to_name
     * @return $this
     */
    public function setAssignedToName($assigned_to_name)
    {
        $this->container['assigned_to_name'] = $assigned_to_name;

        return $this;
    }

    /**
     * Gets score
     * @return string
     */
    public function getScore()
    {
        return $this->container['score'];
    }

    /**
     * Sets score
     * @param string $score
     * @return $this
     */
    public function setScore($score)
    {
        $this->container['score'] = $score;

        return $this;
    }

    /**
     * Gets tags
     * @return string
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     * @param string $tags
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets invoice_status
     * @return string
     */
    public function getInvoiceStatus()
    {
        return $this->container['invoice_status'];
    }

    /**
     * Sets invoice_status
     * @param string $invoice_status
     * @return $this
     */
    public function setInvoiceStatus($invoice_status)
    {
        $this->container['invoice_status'] = $invoice_status;

        return $this;
    }

    /**
     * Gets condition
     * @return string
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     * @param string $condition
     * @return $this
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets ticket_status
     * @return string
     */
    public function getTicketStatus()
    {
        return $this->container['ticket_status'];
    }

    /**
     * Sets ticket_status
     * @param string $ticket_status
     * @return $this
     */
    public function setTicketStatus($ticket_status)
    {
        $this->container['ticket_status'] = $ticket_status;

        return $this;
    }

    /**
     * Gets has_task
     * @return bool
     */
    public function getHasTask()
    {
        return $this->container['has_task'];
    }

    /**
     * Sets has_task
     * @param bool $has_task
     * @return $this
     */
    public function setHasTask($has_task)
    {
        $this->container['has_task'] = $has_task;

        return $this;
    }

    /**
     * Gets tasks_status
     * @return string
     */
    public function getTasksStatus()
    {
        return $this->container['tasks_status'];
    }

    /**
     * Sets tasks_status
     * @param string $tasks_status
     * @return $this
     */
    public function setTasksStatus($tasks_status)
    {
        $this->container['tasks_status'] = $tasks_status;

        return $this;
    }

    /**
     * Gets contacted_since
     * @return int
     */
    public function getContactedSince()
    {
        return $this->container['contacted_since'];
    }

    /**
     * Sets contacted_since
     * @param int $contacted_since
     * @return $this
     */
    public function setContactedSince($contacted_since)
    {
        $this->container['contacted_since'] = $contacted_since;

        return $this;
    }

    /**
     * Gets added_since
     * @return int
     */
    public function getAddedSince()
    {
        return $this->container['added_since'];
    }

    /**
     * Sets added_since
     * @param int $added_since
     * @return $this
     */
    public function setAddedSince($added_since)
    {
        $this->container['added_since'] = $added_since;

        return $this;
    }

    /**
     * Gets updated_since
     * @return int
     */
    public function getUpdatedSince()
    {
        return $this->container['updated_since'];
    }

    /**
     * Sets updated_since
     * @param int $updated_since
     * @return $this
     */
    public function setUpdatedSince($updated_since)
    {
        $this->container['updated_since'] = $updated_since;

        return $this;
    }

    /**
     * Gets is_search
     * @return bool
     */
    public function getIsSearch()
    {
        return $this->container['is_search'];
    }

    /**
     * Sets is_search
     * @param bool $is_search
     * @return $this
     */
    public function setIsSearch($is_search)
    {
        $this->container['is_search'] = $is_search;

        return $this;
    }

    /**
     * Gets show_create_group
     * @return bool
     */
    public function getShowCreateGroup()
    {
        return $this->container['show_create_group'];
    }

    /**
     * Sets show_create_group
     * @param bool $show_create_group
     * @return $this
     */
    public function setShowCreateGroup($show_create_group)
    {
        $this->container['show_create_group'] = $show_create_group;

        return $this;
    }

    /**
     * Gets search_by
     * @return string
     */
    public function getSearchBy()
    {
        return $this->container['search_by'];
    }

    /**
     * Sets search_by
     * @param string $search_by
     * @return $this
     */
    public function setSearchBy($search_by)
    {
        $this->container['search_by'] = $search_by;

        return $this;
    }

    /**
     * Gets editgroup
     * @return bool
     */
    public function getEditgroup()
    {
        return $this->container['editgroup'];
    }

    /**
     * Sets editgroup
     * @param bool $editgroup
     * @return $this
     */
    public function setEditgroup($editgroup)
    {
        $this->container['editgroup'] = $editgroup;

        return $this;
    }

    /**
     * Gets keyword
     * @return string
     */
    public function getKeyword()
    {
        return $this->container['keyword'];
    }

    /**
     * Sets keyword
     * @param string $keyword
     * @return $this
     */
    public function setKeyword($keyword)
    {
        $this->container['keyword'] = $keyword;

        return $this;
    }

    /**
     * Gets e_commerce_query
     * @return string
     */
    public function getECommerceQuery()
    {
        return $this->container['e_commerce_query'];
    }

    /**
     * Sets e_commerce_query
     * @param string $e_commerce_query
     * @return $this
     */
    public function setECommerceQuery($e_commerce_query)
    {
        $this->container['e_commerce_query'] = $e_commerce_query;

        return $this;
    }

    /**
     * Gets page_size
     * @return int
     */
    public function getPageSize()
    {
        return $this->container['page_size'];
    }

    /**
     * Sets page_size
     * @param int $page_size
     * @return $this
     */
    public function setPageSize($page_size)
    {
        $this->container['page_size'] = $page_size;

        return $this;
    }

    /**
     * Gets page
     * @return int
     */
    public function getPage()
    {
        return $this->container['page'];
    }

    /**
     * Sets page
     * @param int $page
     * @return $this
     */
    public function setPage($page)
    {
        $this->container['page'] = $page;

        return $this;
    }

    /**
     * Gets format
     * @return string
     */
    public function getFormat()
    {
        return $this->container['format'];
    }

    /**
     * Sets format
     * @param string $format
     * @return $this
     */
    public function setFormat($format)
    {
        $this->container['format'] = $format;

        return $this;
    }

    /**
     * Gets sortby
     * @return string
     */
    public function getSortby()
    {
        return $this->container['sortby'];
    }

    /**
     * Sets sortby
     * @param string $sortby
     * @return $this
     */
    public function setSortby($sortby)
    {
        $this->container['sortby'] = $sortby;

        return $this;
    }

    /**
     * Gets sortdirection
     * @return string
     */
    public function getSortdirection()
    {
        return $this->container['sortdirection'];
    }

    /**
     * Sets sortdirection
     * @param string $sortdirection
     * @return $this
     */
    public function setSortdirection($sortdirection)
    {
        $this->container['sortdirection'] = $sortdirection;

        return $this;
    }

    /**
     * Gets is_edit
     * @return bool
     */
    public function getIsEdit()
    {
        return $this->container['is_edit'];
    }

    /**
     * Sets is_edit
     * @param bool $is_edit
     * @return $this
     */
    public function setIsEdit($is_edit)
    {
        $this->container['is_edit'] = $is_edit;

        return $this;
    }

    /**
     * Gets has_deals
     * @return bool
     */
    public function getHasDeals()
    {
        return $this->container['has_deals'];
    }

    /**
     * Sets has_deals
     * @param bool $has_deals
     * @return $this
     */
    public function setHasDeals($has_deals)
    {
        $this->container['has_deals'] = $has_deals;

        return $this;
    }

    /**
     * Gets custom_field1
     * @return string
     */
    public function getCustomField1()
    {
        return $this->container['custom_field1'];
    }

    /**
     * Sets custom_field1
     * @param string $custom_field1
     * @return $this
     */
    public function setCustomField1($custom_field1)
    {
        $this->container['custom_field1'] = $custom_field1;

        return $this;
    }

    /**
     * Gets custom_field2
     * @return string
     */
    public function getCustomField2()
    {
        return $this->container['custom_field2'];
    }

    /**
     * Sets custom_field2
     * @param string $custom_field2
     * @return $this
     */
    public function setCustomField2($custom_field2)
    {
        $this->container['custom_field2'] = $custom_field2;

        return $this;
    }

    /**
     * Gets custom_field3
     * @return string
     */
    public function getCustomField3()
    {
        return $this->container['custom_field3'];
    }

    /**
     * Sets custom_field3
     * @param string $custom_field3
     * @return $this
     */
    public function setCustomField3($custom_field3)
    {
        $this->container['custom_field3'] = $custom_field3;

        return $this;
    }

    /**
     * Gets is_saved_search
     * @return bool
     */
    public function getIsSavedSearch()
    {
        return $this->container['is_saved_search'];
    }

    /**
     * Sets is_saved_search
     * @param bool $is_saved_search
     * @return $this
     */
    public function setIsSavedSearch($is_saved_search)
    {
        $this->container['is_saved_search'] = $is_saved_search;

        return $this;
    }

    /**
     * Gets custom_field4
     * @return string
     */
    public function getCustomField4()
    {
        return $this->container['custom_field4'];
    }

    /**
     * Sets custom_field4
     * @param string $custom_field4
     * @return $this
     */
    public function setCustomField4($custom_field4)
    {
        $this->container['custom_field4'] = $custom_field4;

        return $this;
    }

    /**
     * Gets custom_field5
     * @return string
     */
    public function getCustomField5()
    {
        return $this->container['custom_field5'];
    }

    /**
     * Sets custom_field5
     * @param string $custom_field5
     * @return $this
     */
    public function setCustomField5($custom_field5)
    {
        $this->container['custom_field5'] = $custom_field5;

        return $this;
    }

    /**
     * Gets custom_field6
     * @return string
     */
    public function getCustomField6()
    {
        return $this->container['custom_field6'];
    }

    /**
     * Sets custom_field6
     * @param string $custom_field6
     * @return $this
     */
    public function setCustomField6($custom_field6)
    {
        $this->container['custom_field6'] = $custom_field6;

        return $this;
    }

    /**
     * Gets custom_field7
     * @return string
     */
    public function getCustomField7()
    {
        return $this->container['custom_field7'];
    }

    /**
     * Sets custom_field7
     * @param string $custom_field7
     * @return $this
     */
    public function setCustomField7($custom_field7)
    {
        $this->container['custom_field7'] = $custom_field7;

        return $this;
    }

    /**
     * Gets custom_field8
     * @return string
     */
    public function getCustomField8()
    {
        return $this->container['custom_field8'];
    }

    /**
     * Sets custom_field8
     * @param string $custom_field8
     * @return $this
     */
    public function setCustomField8($custom_field8)
    {
        $this->container['custom_field8'] = $custom_field8;

        return $this;
    }

    /**
     * Gets custom_field9
     * @return string
     */
    public function getCustomField9()
    {
        return $this->container['custom_field9'];
    }

    /**
     * Sets custom_field9
     * @param string $custom_field9
     * @return $this
     */
    public function setCustomField9($custom_field9)
    {
        $this->container['custom_field9'] = $custom_field9;

        return $this;
    }

    /**
     * Gets custom_field10
     * @return string
     */
    public function getCustomField10()
    {
        return $this->container['custom_field10'];
    }

    /**
     * Sets custom_field10
     * @param string $custom_field10
     * @return $this
     */
    public function setCustomField10($custom_field10)
    {
        $this->container['custom_field10'] = $custom_field10;

        return $this;
    }

    /**
     * Gets saved_search_id
     * @return string
     */
    public function getSavedSearchId()
    {
        return $this->container['saved_search_id'];
    }

    /**
     * Sets saved_search_id
     * @param string $saved_search_id
     * @return $this
     */
    public function setSavedSearchId($saved_search_id)
    {
        $this->container['saved_search_id'] = $saved_search_id;

        return $this;
    }

    /**
     * Gets is_customer
     * @return bool
     */
    public function getIsCustomer()
    {
        return $this->container['is_customer'];
    }

    /**
     * Sets is_customer
     * @param bool $is_customer
     * @return $this
     */
    public function setIsCustomer($is_customer)
    {
        $this->container['is_customer'] = $is_customer;

        return $this;
    }

    /**
     * Gets product
     * @return string
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     * @param string $product
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets deal_status
     * @return string
     */
    public function getDealStatus()
    {
        return $this->container['deal_status'];
    }

    /**
     * Sets deal_status
     * @param string $deal_status
     * @return $this
     */
    public function setDealStatus($deal_status)
    {
        $this->container['deal_status'] = $deal_status;

        return $this;
    }

    /**
     * Gets has_email
     * @return bool
     */
    public function getHasEmail()
    {
        return $this->container['has_email'];
    }

    /**
     * Sets has_email
     * @param bool $has_email
     * @return $this
     */
    public function setHasEmail($has_email)
    {
        $this->container['has_email'] = $has_email;

        return $this;
    }

    /**
     * Gets has_about
     * @return bool
     */
    public function getHasAbout()
    {
        return $this->container['has_about'];
    }

    /**
     * Sets has_about
     * @param bool $has_about
     * @return $this
     */
    public function setHasAbout($has_about)
    {
        $this->container['has_about'] = $has_about;

        return $this;
    }

    /**
     * Gets has_invoice
     * @return bool
     */
    public function getHasInvoice()
    {
        return $this->container['has_invoice'];
    }

    /**
     * Sets has_invoice
     * @param bool $has_invoice
     * @return $this
     */
    public function setHasInvoice($has_invoice)
    {
        $this->container['has_invoice'] = $has_invoice;

        return $this;
    }

    /**
     * Gets has_tickets
     * @return bool
     */
    public function getHasTickets()
    {
        return $this->container['has_tickets'];
    }

    /**
     * Sets has_tickets
     * @param bool $has_tickets
     * @return $this
     */
    public function setHasTickets($has_tickets)
    {
        $this->container['has_tickets'] = $has_tickets;

        return $this;
    }

    /**
     * Gets added_from
     * @return string
     */
    public function getAddedFrom()
    {
        return $this->container['added_from'];
    }

    /**
     * Sets added_from
     * @param string $added_from
     * @return $this
     */
    public function setAddedFrom($added_from)
    {
        $this->container['added_from'] = $added_from;

        return $this;
    }

    /**
     * Gets added_to
     * @return string
     */
    public function getAddedTo()
    {
        return $this->container['added_to'];
    }

    /**
     * Sets added_to
     * @param string $added_to
     * @return $this
     */
    public function setAddedTo($added_to)
    {
        $this->container['added_to'] = $added_to;

        return $this;
    }

    /**
     * Gets contact_stage
     * @return string
     */
    public function getContactStage()
    {
        return $this->container['contact_stage'];
    }

    /**
     * Sets contact_stage
     * @param string $contact_stage
     * @return $this
     */
    public function setContactStage($contact_stage)
    {
        $this->container['contact_stage'] = $contact_stage;

        return $this;
    }

    /**
     * Gets contact_source
     * @return string
     */
    public function getContactSource()
    {
        return $this->container['contact_source'];
    }

    /**
     * Sets contact_source
     * @param string $contact_source
     * @return $this
     */
    public function setContactSource($contact_source)
    {
        $this->container['contact_source'] = $contact_source;

        return $this;
    }

    /**
     * Gets ecommerce_score
     * @return int
     */
    public function getEcommerceScore()
    {
        return $this->container['ecommerce_score'];
    }

    /**
     * Sets ecommerce_score
     * @param int $ecommerce_score
     * @return $this
     */
    public function setEcommerceScore($ecommerce_score)
    {
        $this->container['ecommerce_score'] = $ecommerce_score;

        return $this;
    }

    /**
     * Gets subscribed
     * @return int
     */
    public function getSubscribed()
    {
        return $this->container['subscribed'];
    }

    /**
     * Sets subscribed
     * @param int $subscribed
     * @return $this
     */
    public function setSubscribed($subscribed)
    {
        $this->container['subscribed'] = $subscribed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\RevampCRM\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\RevampCRM\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


